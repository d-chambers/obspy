# This workflow runs anytime new commits are added to master branch
# It has two purposes:
#   1. Run full test matrix excluding (flaky) network tests
#   2. Run all tests on one OS/python version
name: push_to_master
on:
  push:
    branches:
      - master

env:
  CI_URL: https://github.com/obspy/obspy/actions/runs/${{ github.run_id }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


jobs:
  network_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: goanpeca/setup-miniconda@v1
        with:
          miniconda-version: 'latest'
          python-version: 3.7
          activate-environment: test
          environment-file: .github/test_conda_env.yml

      - name: install obspy
        shell: bash -l {0}
        run: |
          pip install -e .

      - name: install obspy github api
        shell: bash -l {0}
        run: |
          pip install git+https://github.com/obspy/obspy_github_api@${OBSPY_GITHUB_BRANCH}

      - name: run test suite
        shell: bash -l {0}
        run: |
          export MODULELIST=`obshub get-module-list --group all --sep ','`
          export MODULELISTSPACES=`obshub get-module-list --group all --sep ','`
          coverage run --rcfile=.coveragerc --source=${MODULELIST} -m obspy.scripts.runtests --no-flake8 -n gh-actions -r --ci-url="${CI_URL}" $MODULELISTSPACES
          coverage xml -o coverage.xml

      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  full_test_matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: goanpeca/setup-miniconda@v1
        with:
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: .github/test_conda_env.yml

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: install obspy github api
        shell: bash -l {0}
        run: |
          pip install git+https://github.com/obspy/obspy_github_api@${OBSPY_GITHUB_BRANCH}

      - name: run test suite
        shell: bash -l {0}
        run: |
          export MODULELIST=`obshub get-module-list --group default --sep ','`
          export MODULELISTSPACES=`obshub get-module-list --group default --sep ','`
          coverage run --rcfile=.coveragerc --source=${MODULELIST} -m obspy.scripts.runtests --no-flake8 -n gh-actions -r --ci-url="${CI_URL}" $MODULELISTSPACES
          coverage xml -o coverage.xml

      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella
          fail_ci_if_error: false
          file: coverage.xml
